<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="32f4ade0-06d7-47e5-a8ea-cd9671a932d2" name="Changes" comment="Working postgres + plex setup">
      <change afterPath="$PROJECT_DIR$/clusters/media-server/external-secrets/helmrelease.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/clusters/media-server/external-secrets/kustomization.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/clusters/media-server/flux-system/helmrelease.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/clusters/media-server/flux-system/kustomization.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/clusters/media-server/intel-plugin/gpu-helmrelease.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/clusters/media-server/intel-plugin/kustomization.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/clusters/media-server/intel-plugin/operator-helmrelease.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lint.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/orchide-mapping.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/templateLanguages.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/ansible-pms.iml" beforeDir="false" afterPath="$PROJECT_DIR$/ansible-pms.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/media-server/helmrelease.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/media-server/kustomization.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/media-server/namespace.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clusters/production/apps/kustomization.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clusters/production/infrastructure/kustomization.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clusters/production/kustomization.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/inventory.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/playbook.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/common/tasks/file-structure.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/common/tasks/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/common/vars/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/plex/handlers/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/plex/tasks/firewall.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/plex/tasks/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/plex/tasks/plex.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/plex/tasks/quicksync.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/plex/templates/plex.container.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/plex/vars/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/podman/tasks/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/proxy/handlers/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/proxy/tasks/caddy.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/proxy/tasks/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/proxy/tasks/starbase.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/proxy/templates/Caddyfile.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/proxy/templates/caddy.container.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/proxy/templates/starbase.container.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/proxy/templates/starbase.json.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/proxy/templates/users.json.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/proxy/vars/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/shares/handlers/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/shares/tasks/firewall.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/shares/tasks/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/shares/templates/config.json.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/shares/templates/samba.container.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/shares/vars/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/starrs/handlers/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/starrs/tasks/byparr.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/starrs/tasks/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/starrs/tasks/postgres.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/starrs/tasks/prowlarr.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/starrs/tasks/radarr.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/starrs/tasks/sonarr.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/starrs/templates/byparr.container.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/starrs/templates/flaresolverr.container.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/starrs/templates/postgres.container.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/starrs/templates/prowlarr.container.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/starrs/templates/radarr.container.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/starrs/templates/sonarr.container.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/starrs/vars/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/torrent/files/protonwire.container.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/torrent/files/qBittorrent.conf.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/torrent/files/qbittorrent.container.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/torrent/files/testvpn.container.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/torrent/files/watched_folders.json.j2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/torrent/tasks/firewall.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/torrent/tasks/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/torrent/tasks/reload-services.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/torrent/tasks/setup-containers.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/torrent/tasks/validate-vpn.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/roles/torrent/vars/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/setup/01-intel-gpu-device-plugin.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/setup/02-verify-cluster-health.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/setup/03-create-namespace-rbac.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/setup/04-install-fluxcd.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/setup/05-install-external-secrets.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/setup/setup-cluster.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/setup/test-infisical-integration.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/setup/verify-setup.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/Dockerfile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/data/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tmp/app-api-keys-complete.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vault-password" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="odl" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN",
    "assignee": "almarzn"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "git@github.com:almarzn/ansible-pms.git",
    "accountId": "621a330a-f141-44ce-843b-b5a7ed578de8"
  }
}]]></component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2zUjsbKVnBnQoddLhZxYEiL1fS6" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "SHELLCHECK.PATH": "C:\\Users\\almar\\AppData\\Roaming\\JetBrains\\IntelliJIdea2025.2\\plugins\\Shell Script\\linux\\amd64\\shellcheck",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "ignore.virus.scanning.warn.message": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "//wsl.localhost/Debian/home/alma/ansible-pms",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "settings.editor.selected.configurable": "editor.preferences.fonts.default",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File": [
      "TEXT"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="\\wsl.localhost\Debian\home\alma\ansible-pms\clusters\media-server" />
      <recent name="\\wsl.localhost\Debian\home\alma\ansible-pms\clusters\media-server\application" />
      <recent name="\\wsl.localhost\Debian\home\alma\ansible-pms\chart\tailscale\templates" />
      <recent name="\\wsl.localhost\Debian\home\alma\ansible-pms\chart" />
    </key>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-bf35d07a577b-intellij.indexing.shared.core-IU-252.23892.409" />
        <option value="bundled-js-predefined-d6986cc7102b-e03c56caf84a-JavaScript-IU-252.23892.409" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="32f4ade0-06d7-47e5-a8ea-cd9671a932d2" name="Changes" comment="" />
      <created>1751792754141</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1751792754141</updated>
      <workItem from="1751792755381" duration="17402000" />
      <workItem from="1752313919830" duration="16000" />
      <workItem from="1752329273333" duration="9000" />
      <workItem from="1754671189289" duration="5904000" />
    </task>
    <task id="LOCAL-00001" summary="Working postgres + plex setup">
      <option name="closed" value="true" />
      <created>1751794538983</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1751794538983</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Working postgres + plex setup" />
    <option name="LAST_COMMIT_MESSAGE" value="Working postgres + plex setup" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>