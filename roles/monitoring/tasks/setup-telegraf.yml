- name: Start and enable podman.socket service
  systemd:
    name: podman.socket
    enabled: true
    scope: user
    state: started

- name: Fetch bucket ID for default
  command: "podman exec influxdb influx bucket ls --json --org {{ influx_org }}"
  register: bucket_command_result

- name: Set Bucket ID to Variable
  set_fact:
    current_bucket_id: "{{ bucket_command_result.stdout | from_json | json_query('[?name==`default`].id') | first }}"

- name: Set should_generate to Variable
  set_fact:
    should_generate: last_influx_data is not defined or current_bucket_id != last_influx_data.bucket_id

- name: Execute podman command to create write token
  command: 'podman exec influxdb influx auth create --write-bucket {{ current_bucket_id }} --json --description "Telegraf auto-generated token"'
  register: token_creation_result
  when: should_generate

- name: Set Token to Variable
  when: should_generate
  set_fact:
    bucket_write_token: "{{ token_creation_result.stdout | from_json | json_query('token') }}"

- name: Persist Bucket ID to Variable
  when: should_generate
  set_fact:
    last_influx_data: '{ "token": "{{ bucket_write_token }}", "bucket_id": "{{ current_bucket_id }}" }'
    cacheable: true

- name: Render telegraf-config.conf
  notify: restart_telegraf
  template:
    src: ../templates/telegraf-config.conf.j2
    dest: '$HOME/{{ telegraf_config_path }}'

- name: Render telegraf.container
  notify: restart_telegraf
  template:
    src: ../templates/telegraf.container.j2
    dest: '{{ containers.unit.user }}/telegraf.container'
