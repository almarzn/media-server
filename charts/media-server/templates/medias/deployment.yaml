apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-manager
  labels:
    app: media-manager
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: media-manager
  template:
    metadata:
      name: media-manager
      labels:
        app: media-manager
    spec:
      containers:
        - name: media-manager
          image: {{ .Values.mediaManager.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              protocol: TCP
          env:
            - name: DATABASE__USER
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: postgres-secret
            - name: DATABASE__PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: postgres-secret
            - name: AUTH__TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  key: TOKEN_SECRET
                  name: media-manager-secret
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /data/tvshows
              name: library
              subPath: tvshows
            - mountPath: /data/movies
              name: library
              subPath: movies
            - mountPath: /data/torrents
              name: torrents
      volumes:
        - name: library
          hostPath:
            path: {{ .Values.global.libraryPath }}
        - name: config
          configMap:
            name: media-manager-config
            items:
              - key: config.toml
                path: config.toml
        - name: torrents
          hostPath:
            path: {{ .Values.global.downloadsPath }}
      